return {
  -- {
  --   'williamboman/mason.nvim',
  --   event = 'VeryLazy',
  --   config = function()
  --     require('mason').setup()
  --   end,
  -- },
  -- {
  --   'williamboman/mason-lspconfig.nvim',
  --   event = { 'BufReadPre', 'BufNewFile' },
  --   config = function()
  --     require('mason-lspconfig').setup {
  --       ensure_installed = { 'lua_ls', 'gopls' },
  --     }
  --   end,
  -- },
  -- {
  --   'neovim/nvim-lspconfig',
  --   event = { 'BufReadPre', 'BufNewFile' },
  --   config = function()
  --     local lspconfig = require 'lspconfig'
  --
  --     -- Lua LSP configuration
  --     lspconfig.lua_ls.setup {}
  --
  --     -- Go LSP configuration
  --     lspconfig.gopls.setup {}
  --
  --     -- Global mappings
  --     vim.keymap.set('n', '<space>e', vim.diagnostic.open_float)
  --     vim.keymap.set('n', '[d', vim.diagnostic.goto_prev)
  --     vim.keymap.set('n', ']d', vim.diagnostic.goto_next)
  --     vim.keymap.set('n', '<space>q', vim.diagnostic.setloclist)
  --
  --     -- Use LspAttach autocommand to only map the following keys
  --     -- after the language server attaches to the current buffer
  --     vim.api.nvim_create_autocmd('LspAttach', {
  --       group = vim.api.nvim_create_augroup('UserLspConfig', {}),
  --       callback = function(ev)
  --         local opts = { buffer = ev.buf }
  --         vim.keymap.set('n', 'gD', vim.lsp.buf.declaration, opts)
  --         vim.keymap.set('n', 'gd', vim.lsp.buf.definition, opts)
  --         vim.keymap.set('n', 'K', vim.lsp.buf.hover, opts)
  --         vim.keymap.set('n', 'gi', vim.lsp.buf.implementation, opts)
  --         vim.keymap.set('n', '<C-k>', vim.lsp.buf.signature_help, opts)
  --         vim.keymap.set('n', '<space>D', vim.lsp.buf.type_definition, opts)
  --         vim.keymap.set('n', '<space>rn', vim.lsp.buf.rename, opts)
  --         vim.keymap.set({ 'n', 'v' }, '<space>ca', vim.lsp.buf.code_action, opts)
  --         vim.keymap.set('n', 'gr', vim.lsp.buf.references, opts)
  --       end,
  --     })
  --   end,
  -- },
}
