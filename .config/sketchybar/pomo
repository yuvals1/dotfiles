#!/bin/bash

POMO_DIR="$HOME/.config/sketchybar/pomodoro"
TITLE_FILE="$POMO_DIR/.current_title"
WORK_TIME_FILE="$POMO_DIR/.current_work_time"
BREAK_TIME_FILE="$POMO_DIR/.current_break_time"
DEBUG_FILE="$POMO_DIR/.debug_mode"

# Create directory if it doesn't exist
mkdir -p "$POMO_DIR"

# Initialize files with defaults if they don't exist
[ ! -f "$TITLE_FILE" ] && echo "General Task" > "$TITLE_FILE"
[ ! -f "$WORK_TIME_FILE" ] && echo "25" > "$WORK_TIME_FILE"
[ ! -f "$BREAK_TIME_FILE" ] && echo "5" > "$BREAK_TIME_FILE"

# Interactive mode if no arguments
if [ $# -eq 0 ]; then
    echo "🍅 Pomodoro Timer Configuration"
    echo "=============================="
    echo ""
    
    # Show current settings
    CURRENT_TASK=$(cat "$TITLE_FILE")
    CURRENT_WORK=$(cat "$WORK_TIME_FILE")
    CURRENT_BREAK=$(cat "$BREAK_TIME_FILE")
    CURRENT_DEBUG=$([ -f "$DEBUG_FILE" ] && echo "enabled" || echo "disabled")
    
    echo "Current settings:"
    echo "  📝 Task: $CURRENT_TASK"
    echo "  🍅 Work time: $CURRENT_WORK minutes"
    echo "  ☕️ Break time: $CURRENT_BREAK minutes"
    echo "  🐛 Debug mode: $CURRENT_DEBUG"
    echo ""
    
    # Quick presets
    echo "Quick presets:"
    echo "  1) Standard (25/5)"
    echo "  2) Long focus (50/10)"
    echo "  3) Short burst (15/3)"
    echo "  4) Custom"
    echo ""
    echo -n "Choose preset (1-4) or press Enter for custom: "
    read PRESET
    
    case "$PRESET" in
        1)
            NEW_WORK_TIME="25"
            NEW_BREAK_TIME="5"
            echo "Using Standard preset (25/5)"
            ;;
        2)
            NEW_WORK_TIME="50"
            NEW_BREAK_TIME="10"
            echo "Using Long focus preset (50/10)"
            ;;
        3)
            NEW_WORK_TIME="15"
            NEW_BREAK_TIME="3"
            echo "Using Short burst preset (15/3)"
            ;;
        *)
            echo ""
            echo -n "Enter work time in minutes (or press Enter for $CURRENT_WORK): "
            read NEW_WORK_TIME
            
            echo -n "Enter break time in minutes (or press Enter for $CURRENT_BREAK): "
            read NEW_BREAK_TIME
            ;;
    esac
    
    echo ""
    echo -n "Enter task name (or press Enter to keep current): "
    read NEW_TITLE
    
    echo -n "Enable debug mode? (y/N): "
    read DEBUG_RESPONSE
    
    # Apply changes
    if [ -n "$NEW_TITLE" ]; then
        # Check if title already starts with a known emoji
        first_word=$(echo "$NEW_TITLE" | awk '{print $1}')
        
        # List of known emojis we use
        case "$first_word" in
            "🍅"|"☕️"|"🎓"|"📦"|"⚙️"|"🧘"|"🎮"|"📚"|*[![:ascii:]]*)
                # Already has emoji, do nothing
                :
                ;;
            *)
                # No emoji, add one based on keywords
                title_lower=$(echo "$NEW_TITLE" | tr '[:upper:]' '[:lower:]')
                if [[ "$title_lower" == *"break"* ]]; then
                    NEW_TITLE="☕️ $NEW_TITLE"
                elif [[ "$title_lower" == *"technion"* ]]; then
                    NEW_TITLE="🎓 $NEW_TITLE"
                elif [[ "$title_lower" == *"logistics"* ]]; then
                    NEW_TITLE="📦 $NEW_TITLE"
                elif [[ "$title_lower" == *"dotfiles"* ]]; then
                    NEW_TITLE="⚙️ $NEW_TITLE"
                elif [[ "$title_lower" == *"therapy"* ]]; then
                    NEW_TITLE="🧘 $NEW_TITLE"
                else
                    NEW_TITLE="🍅 $NEW_TITLE"
                fi
                ;;
        esac
        echo "$NEW_TITLE" > "$TITLE_FILE"
    fi
    [ -n "$NEW_WORK_TIME" ] && echo "$NEW_WORK_TIME" > "$WORK_TIME_FILE"
    [ -n "$NEW_BREAK_TIME" ] && echo "$NEW_BREAK_TIME" > "$BREAK_TIME_FILE"
    
    if [[ "$DEBUG_RESPONSE" =~ ^[Yy]$ ]]; then
        touch "$DEBUG_FILE"
    elif [[ "$DEBUG_RESPONSE" =~ ^[Nn]$ ]]; then
        rm -f "$DEBUG_FILE"
    fi
    
    echo ""
    echo "Settings updated!"
    echo ""
    echo "Final settings:"
    echo "  Task: $(cat "$TITLE_FILE")"
    echo "  Work time: $(cat "$WORK_TIME_FILE") minutes"
    echo "  Break time: $(cat "$BREAK_TIME_FILE") minutes"
    echo "  Debug mode: $([ -f "$DEBUG_FILE" ] && echo "enabled" || echo "disabled")"
    exit 0
fi

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -n|--name)
            TITLE="$2"
            shift 2
            ;;
        --wt|--work-time)
            WORK_TIME="$2"
            shift 2
            ;;
        --bt|--break-time)
            BREAK_TIME="$2"
            shift 2
            ;;
        --debug)
            DEBUG="1"
            shift
            ;;
        -h|--help)
            echo "Usage: pomo [options]"
            echo "Options:"
            echo "  -n, --name NAME          Set the task name/title"
            echo "  --wt, --work-time MINS   Set work session duration in minutes"
            echo "  --bt, --break-time MINS  Set break session duration in minutes"
            echo "  --debug                  Enable debug mode (1 second timers)"
            echo "  -h, --help               Show this help message"
            echo ""
            echo "Current settings:"
            echo "  Task: $(cat "$TITLE_FILE")"
            echo "  Work time: $(cat "$WORK_TIME_FILE") minutes"
            echo "  Break time: $(cat "$BREAK_TIME_FILE") minutes"
            echo "  Debug mode: $([ -f "$DEBUG_FILE" ] && echo "enabled" || echo "disabled")"
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            echo "Use 'pomo --help' for usage information"
            exit 1
            ;;
    esac
done

# Update files if values were provided
if [ -n "$TITLE" ]; then
    # Check if title already starts with a known emoji
    first_word=$(echo "$TITLE" | awk '{print $1}')
    
    # List of known emojis we use
    case "$first_word" in
        "🍅"|"☕️"|"🎓"|"📦"|"⚙️"|"🧘"|"🎮"|"📚"|*[![:ascii:]]*)
            # Already has emoji, do nothing
            :
            ;;
        *)
        # No emoji, add one based on keywords
        title_lower=$(echo "$TITLE" | tr '[:upper:]' '[:lower:]')
        if [[ "$title_lower" == *"break"* ]]; then
            TITLE="☕️ $TITLE"
        elif [[ "$title_lower" == *"technion"* ]]; then
            TITLE="🎓 $TITLE"
        elif [[ "$title_lower" == *"logistics"* ]]; then
            TITLE="📦 $TITLE"
        elif [[ "$title_lower" == *"dotfiles"* ]]; then
            TITLE="⚙️ $TITLE"
        elif [[ "$title_lower" == *"therapy"* ]]; then
            TITLE="🧘 $TITLE"
        else
            TITLE="🍅 $TITLE"
        fi
        ;;
    esac
    echo "$TITLE" > "$TITLE_FILE"
fi
[ -n "$WORK_TIME" ] && echo "$WORK_TIME" > "$WORK_TIME_FILE"
[ -n "$BREAK_TIME" ] && echo "$BREAK_TIME" > "$BREAK_TIME_FILE"
if [ -n "$DEBUG" ]; then
    if [ "$DEBUG" = "1" ]; then
        touch "$DEBUG_FILE"
    else
        rm -f "$DEBUG_FILE"
    fi
fi

# Show current settings
echo "Pomodoro settings updated:"
echo "  Task: $(cat "$TITLE_FILE")"
echo "  Work time: $(cat "$WORK_TIME_FILE") minutes"
echo "  Break time: $(cat "$BREAK_TIME_FILE") minutes"
echo "  Debug mode: $([ -f "$DEBUG_FILE" ] && echo "enabled" || echo "disabled")"