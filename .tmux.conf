# remember to run: 'tmux source-file ~/.tmux.conf' after modifying
# set -g default-terminal "tmux-256color"
set -g default-terminal "xterm-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set -ag terminal-overrides ",xterm-kitty:RGB"

# Unbind the default kill-pane command
unbind-key x

# Rebind it to kill the pane without confirmation
bind-key x kill-pane

set -g prefix C-a
unbind C-b
bind-key C-a send-prefix

unbind %
bind | split-window -h 

unbind '"'
bind - split-window -v

unbind r
bind r source-file ~/.tmux.conf

bind j resize-pane -D 5
bind k resize-pane -U 5
bind l resize-pane -R 5
bind h resize-pane -L 5

bind -r m resize-pane -Z

set -g mouse on
set-option -g status-position top
set-window-option -g mode-keys vi

bind-key -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"
bind-key -T copy-mode-vi 'y' send -X copy-selection # copy text with "y"

unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode when dragging with mouse

# remove delay for exiting insert mode with ESC in Neovim
set -sg escape-time 10

# tpm plugin
set -g @plugin 'tmux-plugins/tpm'

# list of tmux plugins
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'fabioluciano/tmux-tokyo-night'

set -g @plugin 'jimeh/tmux-themepack' # to configure tmux theme
set -g @themepack 'powerline/default/cyan' # use this theme for tmux


run '~/.tmux/plugins/tpm/tpm'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

set -s set-clipboard on
set -ga terminal-overrides ",xterm*:XT:Ms=\\E]52;%p1%s;%p2%s\\007"

# for yazi 
set -g allow-passthrough on

set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# related to image display
set -g visual-activity off



if-shell "command -v sesh" {
    bind-key "T" run-shell "sesh connect \"$(
      sesh list | fzf-tmux -p 55%,60% \
        --no-sort --border-label ' sesh ' --prompt '‚ö°  ' \
        --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
        --bind 'tab:down,btab:up' \
        --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list)' \
        --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)' \
        --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c)' \
        --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
        --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
        --bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list)'
    )\""
} {
    display-message "sesh is not installed. Please install it for full functionality."
}

